<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <title>Gauge | CSS Animation</title>
    <link rel="stylesheet" href="style.css">
</head>

<style>
:root {
    --gray: rgb(34, 48, 64);
    --blue: rgb(0, 122, 253);
    --green: rgb(6, 215, 108);
    --yellow: rgb(255, 206, 0);
    --red: rgb(255, 0, 0);
    --white: rgb(253, 251, 252);
}

* {
    margin:0;
    padding: 0;
    box-sizing: border-box;
}

body {
    min-height: 100vh;
    background-color: var(--gray);
    display: flex;
    justify-content: center;
    align-items: center;
    flex-direction: column;
    overflow: hidden;
}

.gauge {
    position: relative;
    width: 200px;
    height: 200px;
}

.progress {
    position: absolute;
    width: 100%;
    height: 100%;
    border: .1rem solid var(--white);
    border-bottom: .1rem solid var(--gray);
    border-radius: 50%;
    outline: .2rem solid var(--white);
    outline-offset: .4rem;
    overflow: hidden;
}

.progress::before {
    position: absolute;
    content: '';
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    width: 80%;
    height: 80%;
    background-color: var(--gray);
    border-radius: 50%;
    z-index: 200;
}

.progress::after {
    position: absolute;
    content: '';
    top: 50%;
    width: 100%;
    height: 50%;
    background-color: var(--gray);
}

.bar {
    position: absolute;
    width: 50%;
    height: 100%;
    transform-origin: center right;
}

/* Renk sınıfları */
.red {
    background-color: var(--red);
}

.yellow {
    background-color: var(--yellow);
}

.green {
    background-color: var(--green);
}

.needle {
    position: absolute;
    width: 100%;
    height: 50%;
    background-color: var(--white)!important;
    clip-path: polygon(50% 0, 50% 0, 52% 100%, 48% 100%);
    transform-origin: bottom center;
    z-index: 300;
}

.msg {
    margin-top: 100px;
    font: 1.3rem sans-serif;
}

.process, .success {
    border-radius: .4rem;
    padding: .8rem 1rem;
    transform: translateY(100px);
    opacity: 0;
    transition: .4s ease-out;
}

.process {
    color: var(--white);
    border: 1.5px solid var(--white);
}

.success {
    color: var(--green);
    border: 1.5px solid var(--green);
}

.process.active {
    transform: translateY(0px);
    opacity: 1;
}
.success.active {
    transform: translateY(-52px);
    opacity: 1;
}
</style>

<body>
    <div class="gauge">
        <div class="progress">
            <div class="bar"></div>
            <div class="needle"></div>
        </div>
    </div>
    <div class="msg">
        <p class="process">Verification process</p>
        <p class="success">Successfully done!</p>
    </div>

    <script>
        const process_txt = document.querySelector('.process');
        const success_txt = document.querySelector('.success');
        const bar = document.querySelector('.bar');
        const needle = document.querySelector('.needle');

        // Function to set gauge value with color thresholds
        function setGaugeValue(value) {
            // Limit the value between 0 and 100
            value = Math.min(Math.max(value, 0), 100);

            // Calculate the rotation angle (0 to 180 degrees)
            const angle = (value / 100) * 180 - 90;

            // Apply the rotation to bar and needle
            bar.style.transform = `rotate(${angle}deg)`;
            needle.style.transform = `rotate(${angle}deg)`;

            // Remove existing color classes
            bar.classList.remove('red', 'yellow', 'green');

            // Set color based on value threshold
            if (value <= 50) {
                bar.classList.add('red');
            } else if (value <= 75) {
                bar.classList.add('yellow');
            } else {
                bar.classList.add('green');
            }
        }

        // Example usage: setting the gauge value to 90%
        setGaugeValue(90);

        setTimeout(() => {
            process_txt.classList.add('active');
        }, 0);

        setTimeout(toggleMsg, 1600);

        function toggleMsg() {
            process_txt.classList.remove('active');
            success_txt.classList.add('active');
        }
    </script>
</body>

</html>
